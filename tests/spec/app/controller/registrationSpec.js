// Generated by CoffeeScript 1.6.3
(function() {
  var appdir, basedir, registrationModel, request;

  basedir = void 0;

  registrationModel = void 0;

  request = void 0;

  basedir = "../../../../";

  appdir = basedir + "app/";

  registrationModel = require(appdir + "/models/registration.js");

  request = require("request");

  describe("registration", function() {
    it('should respond with hello world', function(done) {
      return request.get("http://localhost:5000/api/event/registrations/helloworld", function(error, response, body) {
        expect(body).toEqual("Hello World");
        expect(response.headers.link).toEqual("<http://localhost:5000/api/event/registrations/helloworld>; rel=\"self\", <http://localhost:5000/api/event/registrations/helloworld2>; rel=\"next\"");
        return done();
      });
    });
    it('should retreive error when required fields are not filled out', function(done) {
      return request({
        method: "POST",
        uri: "http://localhost:5000/api/event/registrations/"
      }, function(error, response, body) {
        expect(response.statusCode).toEqual(400);
        return done();
      });
    });
    it('should register the user given all required fields are filled out and email is not registered', function(done) {
      var newRegistration;
      newRegistration = {
        person: {
          name: "Ismar Slomic",
          email: "ismar@slomic.no222",
          phone: 99589889
        }
      };
      return request({
        method: "POST",
        uri: "http://localhost:5000/api/event/registrations/",
        json: newRegistration
      }, function(error, response, body) {
        expect(response.statusCode).toEqual(200);
        expect(response.headers.link).not.toBe(null);
        return done();
      });
    });
    xit('should unregister the user given he is registered', function(done) {
      var newRegistration;
      newRegistration = {
        person: {
          name: "Ismar Slomic",
          email: "ismar@slomic.no",
          phone: 99589889
        }
      };
      return request({
        method: "DELETE",
        uri: "http://localhost:5000/api/event/registrations/",
        json: newRegistration
      }, function(error, response, body) {
        console.log(body);
        console.log(response.headers.link);
        expect(response.statusCode).toEqual(200);
        expect(response.headers.link).not.toBe(null);
        return done();
      });
    });
    xit('should unregister the user given his registration is confirmed', function(done) {
      var newRegistration;
      newRegistration = {
        person: {
          name: "Ismar Slomic",
          email: "ismar@slomic.no",
          phone: 99589889
        }
      };
      return request({
        method: "DELETE",
        uri: "http://localhost:5000/api/event/registrations/",
        json: newRegistration
      }, function(error, response, body) {
        console.log(body);
        console.log(response.headers.link);
        expect(response.statusCode).toEqual(200);
        expect(response.headers.link).not.toBe(null);
        return done();
      });
    });
    xit('should retreive error when unregistering given user has checked in', function(done) {
      var newRegistration;
      newRegistration = {
        person: {
          name: "Ismar Slomic",
          email: "ismar@slomic.no",
          phone: 99589889
        }
      };
      return request({
        method: "DELETE",
        uri: "http://localhost:5000/api/event/registrations/",
        json: newRegistration
      }, function(error, response, body) {
        console.log(body);
        console.log(response.headers.link);
        expect(response.statusCode).toEqual(403);
        expect(response.headers.link).not.toBe(null);
        return done();
      });
    });
    return xit('should retreive error when registering user with duplicate email address', function(done) {});
  });

}).call(this);

/*
//@ sourceMappingURL=registrationSpec.map
*/
